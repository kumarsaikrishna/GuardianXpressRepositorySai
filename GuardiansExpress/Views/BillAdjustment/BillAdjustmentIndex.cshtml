@model IEnumerable<GuardiansExpress.Models.DTOs.BillAdjustmentDTO>

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- Add Select2 CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

<!-- Add Select2 JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>




<div class="main-panel">

	<div class="content-wrapper">
		<div class="row">
			<div class="col-md-12 mt-3">
				<div class="card">
					<div class="card-body">
						<form action="@Url.Action("Save", "BillAdjustment")" method="post">
							<div class="form-group row">
								<div class="col-md-6">
									<input type="checkbox" name="BalanceBills" id="BalanceBills" value="true" />
									<label for="BalanceBills">Balance Bills</label>
								</div>
							</div>
							<div class="form-group row">
								<div class="col-md-6">
									<input type="radio" name="OperationType" value="Payment" id="Payment" checked />
									<label for="Payment">Payment</label>
									<input type="radio" name="OperationType" value="Bill" id="Bill" />
									<label for="Bill">Bill</label>
								</div>
							</div>
							<div class="form-group row">
								<div class="col-lg-6">
									<label>Party*</label>
									<select class="form-control" name="Party" id="Party" onchange="fetchVoucherDetails()">
										<option value="">Select Party</option>
										@foreach (var l in ViewBag.l)
										{
											<option value="@l">@l</option>
										}
									</select>
								</div>
							</div>

							<div class="form-group row">
								<div class="col-lg-3" id="voucherNumberContainer">
									<label>Voucher Number</label>
									<select class="form-control" name="VoucherNumber" id="VoucherNumber">
										<option value="">Select Voucher</option>
									</select>
								</div>
								<div class="col-lg-3">
									<label>Voucher Date</label>
									<input type="text" id="voucherDate" name="voucherDate" class="form-control" value="" readonly>
								</div>

								<div class="col-lg-3" id="billNumberContainer">
									<label>Bill Number</label>
									<select class="form-control" name="BillNumber" id="BillNumber">
										<option value="">Select BillNumber</option>
									</select>
								</div>
								<div class="col-lg-3">
									<label>Bill Amt</label>
									<input type="number" id="Amount" name="Amount" class="form-control" value="" readonly>
								</div>

								<div class="col-lg-3">
									<label>Bal. Amt</label>
									<input type="number" id="balAmount" name="balAmount" class="form-control" value="" readonly>
								</div>

								<div class="col-lg-3" id="billDateContainer">
									<label>Bill Date</label>
									<input type="text" id="Bill_Date" name="Bill_Date" class="form-control" value="" readonly>
								</div>
							</div>

						      <table class="table table-bordered mt-3">
								<thead>
									<tr>
										<th>Ref No.</th>
										<th>Particular</th>
										<th>Date</th>
										<th>Amount</th>
										<th>Adj. Amt</th>
										<th>T.Bal. Amt</th>
										<th>Action</th>
									</tr>
								</thead>
								<tbody id="referenceTableBody">
									<tr class="billItemRow">
										<td><input type="number" name="BillItems[0].RefNo" class="form-control"></td>
										<td><input type="text" name="BillItems[0].Particular" class="form-control"></td>
										<td><input type="date" name="BillItems[0].Date" class="form-control current-date-input"></td>
										<td><input type="number" name="BillItems[0].Amount" class="form-control" value="0.00"></td>
										<td><input type="number" name="BillItems[0].AdjAmt" class="form-control" value="0.00"></td>
										<td><input type="number" name="BillItems[0].TBalAmount" class="form-control" value="0.00"></td>
										<td><button type="button" class="btn btn-danger btn-sm" onclick="removeEditTaxDetail(this)">✖</button></td>
									</tr>
								</tbody>
							</table>

							<div class="mt-3">
								<button type="submit" class="btn btn-success">Save</button>
								<button type="button" class="btn btn-secondary">Cancel</button>
							</div>
							   

							<!-- Previous form content remains the same -->
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		// Handle radio button change event for Payment and Bill
		const paymentRadio = document.getElementById('Payment');
		const billRadio = document.getElementById('Bill');

		const voucherNumberContainer = document.getElementById('voucherNumberContainer');
		const voucherDateContainer = document.getElementById('voucherDateContainer');
		const billNumberContainer = document.getElementById('billNumberContainer');
		const billDateContainer = document.getElementById('billDateContainer');

		function handleRadioChange() {
			if (paymentRadio.checked) {
				voucherNumberContainer.style.display = 'block';
				voucherDateContainer.style.display = 'block';
				billNumberContainer.style.display = 'none';
				billDateContainer.style.display = 'none';
			} else if (billRadio.checked) {
				voucherNumberContainer.style.display = 'none';
				voucherDateContainer.style.display = 'none';
				billNumberContainer.style.display = 'block';
				billDateContainer.style.display = 'block';
			}
		}

		// Attach the event listeners for radio button changes
		paymentRadio.addEventListener('change', handleRadioChange);
		billRadio.addEventListener('change', handleRadioChange);

		// Call handleRadioChange on page load to ensure the correct fields are shown/hidden
		handleRadioChange();

		// Function to set the current date for date inputs
		function setCurrentDateInputs() {
			const today = new Date();
			const year = today.getFullYear();
			const month = String(today.getMonth() + 1).padStart(2, '0');
			const day = String(today.getDate()).padStart(2, '0');
			const formattedDate = `${year}-${month}-${day}`;

			// Set current date for all date inputs with class '.current-date-input'
			const dateInputs = document.querySelectorAll('.current-date-input');
			dateInputs.forEach(input => {
				input.value = formattedDate;
				input.min = formattedDate;
				input.max = formattedDate;

				// Prevent manual date changes
				input.addEventListener('change', function() {
					const selectedDate = new Date(this.value);
					const today = new Date();

					if (selectedDate.toDateString() !== today.toDateString()) {
						// Reset to today's date if the selected date is not today
						this.value = formattedDate;
						Swal.fire({
							icon: 'error',
							title: 'Invalid Date',
							text: 'Please select today\'s date only.'
						});
					}
				});
			});
		}

		// Call the function to set the current date on page load
		setCurrentDateInputs();

		// Remove row in the tax details table and reset if needed
		function removeEditTaxDetail(btn) {
			const row = btn.closest('tr');
			const tableBody = document.getElementById('referenceTableBody');

			if (tableBody.rows.length > 1) {
				row.remove();
			} else {
				// Reset all inputs if only one row remains
				row.querySelectorAll('input').forEach(input => {
					if (input.type === 'number') {
						input.value = input.getAttribute('value') || '0.00';
					} else if (input.type === 'date') {
						const today = new Date();
						const year = today.getFullYear();
						const month = String(today.getMonth() + 1).padStart(2, '0');
						const day = String(today.getDate()).padStart(2, '0');
						input.value = `${year}-${month}-${day}`;
					} else if (input.type === 'text') {
						input.value = '';
					}
				});
			}
		}

		// Dropdown handling for partyField enabling/disabling
		$('#underGroupDropdown').change(function() {
			$('#partyField').prop('disabled', $(this).val() === '');
		});

		// Handle row removal with class .removeRow
		$(document).on("click", ".removeRow", function() {
			$(this).closest("tr").remove();
		});

		// Success message handling using SweetAlert
		var successMessage = '@TempData["SuccessMessage"]';
		if (successMessage) {
			Swal.fire({
				title: "Success!",
				text: successMessage,
				icon: "success",
				confirmButtonText: "OK"
			});
		}
	});
</script>

<script>
	$(document).ready(function() {
		$('#VoucherNumber').on('change', function() {
			var voucherNumber = $(this).val();

			if (voucherNumber) {
				$.ajax({
					type: "POST",
					url: '@Url.Action("GetVoucherDetails", "BillAdjustment")',
					data: { voucherNumber: voucherNumber },
					success: function(response) {
						console.log("Full Response: ", response);  // Log the entire response to check its content

						// Assign response data to the corresponding input fields
						
							$('#Amount').val(response.amount);  // Assign amount
							$('#balAmount').val(response.balAmount);  // Assign balAmount

							// Handle voucherDate formatting (if needed)
							let formattedVoucherDate = response.voucherDate ? new Date(response.voucherDate).toISOString().slice(0, 10) : '';
							$('#voucherDate').val(formattedVoucherDate);  // Assign voucherDate

							$('#BillNumber').val(response.billNumber);  // Assign billNumber

							// Log the values being assigned to make sure everything is working
							console.log("Assigning Amount: " + response.amount);
							console.log("Assigning BalAmount: " + response.balAmount);
							console.log("Assigning VoucherDate: " + formattedVoucherDate);
							console.log("Assigning BillNumber: " + response.billNumber);
						

						// Show/Hide relevant fields if necessary
						if (response.billNumber) {
							$('#billNumberContainer').show();
							$('#billDateContainer').show();
						} else {
							$('#billNumberContainer').hide();
							$('#billDateContainer').hide();
						}
					},
					error: function(xhr, status, error) {
						console.error('Error fetching voucher details:', error);
					}
				});
			}
		});
	});
</script>

<script>
	function fetchVoucherDetails() {
		var party = document.getElementById("Party").value;

		if (party) {
			$.ajax({
				url: '@Url.Action("GetVoucherDetailsByParty", "BillAdjustment")', // Controller action to get voucher details
				type: 'GET',
				data: { party: party },
				success: function (data) {
					// Update VoucherNumber dropdown
					var voucherDropdown = $('#VoucherNumber');
					voucherDropdown.empty();
					$.each(data.vouchers, function (key, value) {
						voucherDropdown.append($('<option></option>').attr('value', value.voucherNumber).text(value.voucherNumber));
					});

					// Set VoucherDate
					$('#voucherDate').val(data.voucherDate);

					// Update BillNumber dropdown
					var billDropdown = $('#BillNumber');
					billDropdown.empty();
					$.each(data.bills, function (key, value) {
						billDropdown.append($('<option></option>').attr('value', value.billNumber).text(value.billNumber));
					});
				}
			});
		}
	}
</script>

<script>
	$(document).ready(function() {
	   // Initialize Select2 on the 'Party' dropdown
	   $('#Party').select2({
		  placeholder: 'Select or type to search',  // Placeholder text
		  allowClear: true                          // Option to clear the selection
	   });
	});
</script>





 