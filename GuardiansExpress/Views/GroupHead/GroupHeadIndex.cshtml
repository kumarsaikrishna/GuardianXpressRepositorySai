@model IEnumerable<GuardiansExpress.Models.DTO.GroupHeadModel>
@{
    int rCnt = 1;
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="main-panel">
    <div class="content-wrapper">
        <div class="">
            <section class="content">
                <div class="row">
                    <div class="col-md-12 mt-3">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title">Group Head</h4>
                                <button type="button" class="btn btn-primary">
                                    <a href="javascript:void(0);" onclick="openAddModal();" class="text-white" >
                                        <i class="fa fa-plus" aria-hidden="true"></i> Add Group Head
                                    </a>
                                </button>
                            </div>
                            <div class="box-body">
                                <div class="table-responsive">
                                    <table id="example1" class="text-fade table table-bordered" style="width:100%">
                                        <thead>
                                            <tr class="text-dark">
                                                <th>S.No</th>
                                                <th>Group Head Name</th>
                                                <th>Behaviour</th>
                                                <th>Order Of PLBs</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var groupHead in Model)
                                            {
                                                <tr>
                                                    <td scope="row">@(rCnt++)</td>
                                                    <td>
                                                        <a href="#" onclick="EditGroupHead(@groupHead.Id, '@groupHead.GroupHeadName', '@groupHead.Behaviour', '@groupHead.OrderOfPLBs')">
                                                            @groupHead.GroupHeadName
                                                        </a>
                                                    </td>
                                                    <td>@groupHead.Behaviour</td>
                                                    <td>@groupHead.OrderOfPLBs</td>
                                                    <td>
                                                        <a href="#" onclick="DeleteGroupHead(@groupHead.Id)" title="Delete">
                                                            <button type="button" class="waves-effect waves-circle btn btn-circle btn-danger btn-xs">
                                                                <i class="fa fa-trash"></i>
                                                            </button>
                                                        </a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
        
    </div>
</div>

<!-- Add Group Head Modal -->
<div class="modal fade" id="addGroupHeadModal" tabindex="-1" aria-labelledby="addGroupHeadModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addGroupHeadModalLabel">Add Group Head</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="groupHeadForm" action="@Url.Action("GroupHeadAdd", "GroupHead")" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-lg-12">
                            <h5 class="mb-3" style="background-color: whitesmoke; color: black; padding: 10px; text-transform: uppercase;">Group Head Information</h5>
                        </div>
                        <div class="col-lg-6">
                            <label for="GroupHeadName">Group Head Name *</label>
                            <input type="text" class="form-control" id="GroupHeadName" name="GroupHeadName" maxlength="20" required>
                            <div class="invalid-feedback">Please enter a valid Order (max 20 characters).</div>
                        </div>
                        <div class="col-lg-6">
                            <label for="Behaviour">Behaviour *</label>
                            <select class="form-control" id="Behaviour" name="Behaviour" required>
                                <option value="">Select Behaviour</option>
                                <option value="assets">assets</option>
                                <option value="capitals and liabilities">capitals and liabilities</option>
                                <option value="Income(trading)">Income(trading)</option>
                                <option value="expense(trading)">expense(trading)</option>
                                <option value="income(P&L)">income(P&L)</option>
                                <option value="expense(P&L)">expense(P&L)</option>
                            </select>
                        </div>
                        <div class="col-lg-6">
                            <label for="OrderOfPLBs">Order Of PLBs</label>
                            <input type="text" class="form-control" id="OrderOfPLBs" name="OrderOfPLBs" maxlength="20">
                            <div class="invalid-feedback">Please enter a valid Order (max 20 characters).</div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="reset" class="btn btn-success">Reset</button>
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Group Head Modal -->
<div class="modal fade" id="editGroupHeadModal" tabindex="-1" aria-labelledby="editGroupHeadModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editGroupHeadModalLabel">Edit Group Head</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editGroupHeadForm" action="@Url.Action("GroupHeadUpdate", "GroupHead")" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="Id" id="editGroupHeadId" value="" />
                    <div class="row">
                        <div class="col-lg-12">
                            <h5 class="mb-3" style="background-color: whitesmoke; color: black; padding: 10px; text-transform: uppercase;">Edit Group Head</h5>
                        </div>
                        <div class="col-lg-6">
                            <label for="editGroupHeadName">Group Head Name *</label>
                            <input type="text" class="form-control" id="editGroupHeadName" name="GroupHeadName" maxlength="20" required>
                            <div class="invalid-feedback">Please enter a valid Order (max 20 characters).</div>
                        </div>
                        <div class="col-lg-6">
                            <label for="editBehaviour">Behaviour *</label>
                            <select class="form-control" id="editBehaviour" name="Behaviour" required>
                                <option value="">Select Behaviour</option>
                                <option value="assets">assets</option>
                                <option value="capitals and liabilities">capitals and liabilities</option>
                                <option value="Income(trading)">Income(trading)</option>
                                <option value="expense(trading)">expense(trading)</option>
                                <option value="income(P&L)">income(P&L)</option>
                                <option value="expense(P&L)">expense(P&L)</option>
                            </select>
                        </div>
                        <div class="col-lg-6">
                            <label for="editOrderOfPLBs">Order Of PLBs</label>
                            <input type="text" class="form-control" id="editOrderOfPLBs" name="OrderOfPLBs" maxlength="20">
                            <div class="invalid-feedback">Please enter a valid Order (max 20 characters).</div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <button type="submit" class="btn btn-primary">Update</button>
                            <button type="reset" class="btn btn-success">Reset</button>
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Function to open the Add Group Head modal
    function openAddModal() {
        $('#addGroupHeadModal').modal('show');
    }

    // Function to open the Edit Group Head modal and populate it with data
    function EditGroupHead(id, name, behaviour, orderOfPLBs) {
        $('#editGroupHeadId').val(id);
        $('#editGroupHeadName').val(name);
        $('#editBehaviour').val(behaviour);
        $('#editOrderOfPLBs').val(orderOfPLBs);
        $('#editGroupHeadModal').modal('show');
    }

    // Function to delete a group head
    function DeleteGroupHead(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/GroupHead/Delete/' + id,
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            Swal.fire("Deleted!", "Group Head has been deleted.", "success").then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire("Error!", response.message || "There was an issue deleting the Group Head.", "error");
                        }
                    },
                    error: function () {
                        Swal.fire("Error!", "There was an error processing your request.", "error");
                    }
                });
            }
        });
    }

    // Handle form submission for Add Group Head
    $('#groupHeadForm').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);

        $.ajax({
            url: '/GroupHead/GroupHeadAdd',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    Swal.fire("Success!", "Group Head added successfully.", "success").then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire("Error!", response.message || "There was an issue adding the Group Head.", "error");
                }
            },
            error: function () {
                Swal.fire("Error!", "There was an error processing your request.", "error");
            }
        });
    });

    // Handle form submission for Edit Group Head
    $('#editGroupHeadForm').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);

        $.ajax({
            url: '/GroupHead/GroupHeadUpdate',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    Swal.fire("Updated!", "Group Head updated successfully.", "success").then(() => {
                        $('#editGroupHeadModal').modal('hide');
                        window.location.reload();
                    });
                } else {
                    Swal.fire("Error!", response.message || "Failed to update Group Head.", "error");
                }
            },
            error: function () {
                Swal.fire("Error!", "An error occurred while updating the Group Head.", "error");
            }
        });
    });

    // Search functionality
    function searchTable() {
        var idInput = document.getElementById("searchId").value.toLowerCase();
        var nameInput = document.getElementById("searchGroupHeadName").value.toLowerCase();
        var table = document.getElementById("groupHeadList");
        var rows = table.getElementsByTagName("tr");

        for (var i = 1; i < rows.length; i++) {
            var idColumn = rows[i].getElementsByTagName("td")[1]; // Id is in the second column
            var nameColumn = rows[i].getElementsByTagName("td")[2]; // Name is in the third column

            if (idColumn && nameColumn) {
                var idText = idColumn.textContent.toLowerCase();
                var nameText = nameColumn.textContent.toLowerCase();

                // Check if both fields match
                if (idText.includes(idInput) && nameText.includes(nameInput)) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        let searchInput = document.querySelector("input[name='searchTerm']");
        let paginationLinks = document.querySelectorAll(".pagination .page-link");

        paginationLinks.forEach(link => {
            let url = new URL(link.href);
            if (searchInput && searchInput.value) {
                url.searchParams.set("searchTerm", searchInput.value);
            }
            link.href = url.toString();
        });
    });
</script>