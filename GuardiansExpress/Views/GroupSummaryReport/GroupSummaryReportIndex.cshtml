@model List<GuardiansExpress.Models.Entity.LedgerMasterEntity>
@{
    ViewData["Title"] = "Group Summary Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
}

<style>
    .dropdown-menu {
        width: 100%;
    }

    .table-responsive {
        max-height: 70vh;
        overflow: auto;
    }
    
    .selected-filter {
        background-color: #e6f7ff;
        border-left: 3px solid #1890ff;
        padding-left: 10px;
    }
</style>

<div class="main-panel">
    <div class="content-wrapper">
        <div class="container-full">
            <div class="content">
                <div class="row">
                    <div class="col-md-12 mt-3">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h4 class="card-title">Group Summary Report</h4>
                                <div>
                                    <a href="javascript:void(0)" onclick="exportToPdf()" class="btn btn-danger">
                                        <i class="fas fa-file-pdf"></i> Export PDF
                                    </a>
                                    <a href="javascript:void(0)" onclick="exportToExcel()" class="btn btn-success">
                                        <i class="fas fa-file-excel"></i> Export Excel
                                    </a>
                                </div>
                            </div>
                            <div class="box-body">
                                <form asp-action="Search" method="post" id="searchForm">
                                    <div class="row g-3">
                                        <!-- Date Range -->
                                        <div class="col-md-3">
                                            <label>Start Date</label>
                                            <input type="date" name="startDate" class="form-control"
                                                   value="@ViewBag.StartDate" />
                                        </div>
                                        <div class="col-md-3">
                                            <label>End Date</label>
                                            <input type="date" name="endDate" class="form-control"
                                                   value="@ViewBag.EndDate" />
                                        </div>

                                        <!-- Branch -->
                                        <div class="col-md-3">
                                            <label>Branch</label>
                                            <select name="branch" class="form-control">
                                                <option value="">All Branches</option>
                                                <option value="Head Office" selected='@(Context.Request.Query["branch"] == "Head Office")'>Head Office</option>
                                            </select>
                                        </div>

                                        <!-- Account Group -->
                                        <div class="col-md-3 @(ViewBag.SelectedAccGroup != null ? "selected-filter" : "")">
                                            <label>AccGroup</label>
                                            <input type="text" name="accGroup" id="accGroup" class="form-control"
                                                   placeholder="Enter Account Group"
                                                   value="@ViewBag.SelectedAccGroup"
                                                   list="accGroupOptions" />
                                            <datalist id="accGroupOptions">
                                                @foreach (var group in ViewBag.UniqueAccountGroups as List<string> ?? new List<string>())
                                                {
                                                    <option value="@group">@group</option>
                                                }
                                            </datalist>
                                        </div>

                                        <!-- Report Type -->
                                        <div class="col-md-3">
                                            <label>Report Type</label>
                                            <select name="reportType" class="form-control">
                                                <option value="">All Types</option>
                                                @foreach (var type in ViewBag.ReportTypeList as List<SelectListItem> ?? new List<SelectListItem>())
                                                {
                                                    <option value="@type.Value" selected='@(Context.Request.Query["reportType"] == type.Value)'>@type.Text</option>
                                                }
                                            </select>
                                        </div>

                                        <!-- Ledger -->
                                        <div class="col-md-3">
                                            <label>Ledger</label>
                                            <select name="ledger" class="form-control">
                                                <option value="">All Ledgers</option>
                                                @if (ViewBag.ACCGroup != null)
                                                {
                                                    foreach (var item in ViewBag.ACCGroup as List<string> ?? new List<string>())
                                                    {
                                                        <option value="@item" selected='@(Context.Request.Query["ledger"] == item)'>@item</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                    <!-- Balance Type -->
                                        <div class="col-md-3">
                                            <label>Balance Type</label>
                                            <select name="balType" class="form-control">
                                                <option value="">All Types</option>
                                                <option value="Dr" selected='@(Context.Request.Query["balType"] == "Dr")'>Dr</option>
                                                <option value="Cr" selected='@(Context.Request.Query["balType"] == "Cr")'>Cr</option>
                                            </select>
                                        </div>
                                        <!-- Column Selector -->
                                        <div class="col-md-3">
                                            <label>Columns</label>
                                            <div class="dropdown">
                                                <button class="btn btn-outline-secondary dropdown-toggle w-100" type="button" data-bs-toggle="dropdown">
                                                    Select Columns (@((ViewBag.SelectedColumns as List<string>)?.Count ?? 0))
                                                </button>
                                                <ul class="dropdown-menu p-2" style="max-height: 300px; overflow-y: auto;">
                                                    @if (ViewBag.TableColumns != null)
                                                    {
                                                        foreach (var column in ViewBag.TableColumns as List<string> ?? new List<string>())
                                                        {
                                                            <li>
                                                                <div class="form-check">
                                                                    <input class="form-check-input column-checkbox"
                                                                           type="checkbox"
                                                                           name="SelectedColumns"
                                                                           value="@column"
                                                                           id="chk_@column"
                                                                           checked='@((ViewBag.SelectedColumns as List<string>)?.Contains(column) ?? false)' />
                                                                    <label class="form-check-label" for="chk_@column">@column</label>
                                                                </div>
                                                            </li>
                                                        }
                                                    }
                                                </ul>
                                            </div>
                                        </div>

                                        <!-- Submit -->
                                        <div class="text-end mt-3">
                                            <button type="submit" class="btn btn-success me-2">
                                                <i class="fa fa-search"></i> Search
                                            </button>
                                            <button type="button" class="btn btn-outline-secondary" onclick="resetForm()">
                                                <i class="fa fa-refresh"></i> Reset
                                            </button>
                                        </div>
                                    </div>
                                </form>

                                @if (Model != null && Model.Count > 0)
                                {
                                    <div class="table-responsive mt-4">
                                        <table class="table table-bordered table-striped">
                                            <thead class="bg-primary text-white">
                                                <tr>
                                                    @if (ViewBag.SelectedColumns != null)
                                                    {
                                                        foreach (var column in ViewBag.SelectedColumns as List<string> ?? new List<string>())
                                                        {
                                                            <th>@column</th>
                                                        }
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model)
                                                {
                                                    <tr>
                                                        @if (ViewBag.SelectedColumns != null)
                                                        {
                                                            foreach (var column in ViewBag.SelectedColumns as List<string> ?? new List<string>())
                                                            {
                                                                var prop = item.GetType().GetProperty(column);
                                                                <td>
                                                                    @if (prop != null)
                                                                    {
                                                                        var value = prop.GetValue(item);
                                                                        @switch (column)
                                                                        {
                                                                            case "TransactionDate":
                                                                            case "CreatedOn":
                                                                            case "UpdatedOn":
                                                                                <text>@(value != null ? ((DateTime)value).ToString("dd-MM-yyyy") : "-")</text>
                                                                                break;
                                                                            case "Balance":
                                                                            case "OpeningBalance":
                                                                                <text>@(value != null ? ((decimal)value).ToString("N2") : "-")</text>
                                                                                break;
                                                                            case "IsImportant":
                                                                            case "IsActive":
                                                                            case "IsDeleted":
                                                                            case "Taxable":
                                                                            case "VehicleExpense":
                                                                                <text>@(value != null ? ((bool)value ? "Yes" : "No") : "-")</text>
                                                                                break;
                                                                            default:
                                                                                <text>@(value?.ToString() ?? "-")</text>
                                                                                break;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <text>-</text>
                                                                    }
                                                                </td>
                                                            }
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else if (Model != null)
                                {
                                    <p class="mt-3 text-center text-muted">No records found matching your criteria.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Preserve checkbox state
        const checkboxes = document.querySelectorAll('.column-checkbox');
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const checkedCount = document.querySelectorAll('.column-checkbox:checked').length;
                if (checkedCount === 0) {
                    this.checked = true;
                    alert('At least one column must be selected');
                }
                updateColumnCount();
            });
        });

        function updateColumnCount() {
            const count = document.querySelectorAll('.column-checkbox:checked').length;
            document.querySelector('.dropdown-toggle').innerHTML =
                `Select Columns (${count})`;
        }
        updateColumnCount();
        
        // Highlight AccGroup field if it has a value
        const accGroupField = document.getElementById('accGroup');
        if (accGroupField && accGroupField.value) {
            accGroupField.parentElement.classList.add('selected-filter');
        }
    });

    function resetForm() {
        document.getElementById('searchForm').reset();
        document.querySelectorAll('.column-checkbox').forEach(checkbox => {
            checkbox.checked = true;
        });
        document.querySelector('.dropdown-toggle').innerHTML = 'Select Columns';
        
        // Remove highlighting
        document.querySelectorAll('.selected-filter').forEach(el => {
            el.classList.remove('selected-filter');
        });
    }
    
    function exportToPdf() {
        // Get all form values
        const formData = new FormData(document.getElementById('searchForm'));
        const queryString = new URLSearchParams(formData).toString();
        window.location.href = '@Url.Action("ExportToPdf", "GroupSummaryReport")?' + queryString;
    }
    
    function exportToExcel() {
        // Get all form values
        const formData = new FormData(document.getElementById('searchForm'));
        const queryString = new URLSearchParams(formData).toString();
        window.location.href = '@Url.Action("ExportToExcel", "GroupSummaryReport")?' + queryString;
    }
</script>