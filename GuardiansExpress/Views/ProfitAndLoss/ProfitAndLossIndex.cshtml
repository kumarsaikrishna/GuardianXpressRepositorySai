@model List<GuardiansExpress.Models.Entity.LedgerMasterEntity>
@{
    ViewData["Title"] = "Profit And Loss Report";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Calculate totals
    decimal totalDebit = 0;
    decimal totalCredit = 0;
    decimal netResult = 0;

    if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
            // Assuming BalanceOpening represents the amount and BalanceIn indicates Debit/Credit
            decimal amount = item.BalanceOpening ?? 0;

            if (item.BalanceIn?.ToUpper() == "DEBIT" || item.BalanceIn?.ToUpper() == "DR")
            {
                totalDebit += amount;
            }
            else if (item.BalanceIn?.ToUpper() == "CREDIT" || item.BalanceIn?.ToUpper() == "CR")
            {
                totalCredit += amount;
            }
        }

        netResult = totalCredit - totalDebit; // Profit if positive, Loss if negative
    }
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<style>
    .dropdown-menu {
        width: 100%;
    }

    .table-responsive {
        max-height: 70vh;
        overflow: auto;
    }

    .selected-filter {
        background-color: #e6f7ff;
        border-left: 3px solid #1890ff;
        padding-left: 10px;
    }

    .table th {
        position: sticky;
        top: 0;
        background-color: #f8f9fa;
        z-index: 10;
    }

    .text-end {
        text-align: right;
    }

    .no-data {
        text-align: center;
        padding: 2rem;
        color: #6c757d;
    }

    .totals-section {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        padding: 1rem;
        margin-top: 1rem;
    }

    .total-row {
        background-color: #e9ecef;
        font-weight: bold;
    }

    .profit {
        color: #28a745;
        font-weight: bold;
    }

    .loss {
        color: #dc3545;
        font-weight: bold;
    }

    .net-result {
        font-size: 1.1em;
        padding: 0.5rem;
        border-radius: 0.25rem;
        text-align: center;
        margin-top: 0.5rem;
    }

    .net-profit {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .net-loss {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
</style>

<div class="main-panel">
    <div class="content-wrapper">
        <div class="container-full">
            <div class="content">
                <div class="row">
                    <div class="col-md-12 mt-3">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h4 class="card-title">Profit And Loss Report</h4>
                                <div>
                                    <a href="javascript:void(0)" onclick="exportToPdf()" class="btn btn-danger">
                                        <i class="fas fa-file-pdf"></i> Export PDF
                                    </a>
                                    <a href="javascript:void(0)" onclick="exportToExcel()" class="btn btn-success">
                                        <i class="fas fa-file-excel"></i> Export Excel
                                    </a>
                                </div>
                            </div>

                            <div class="card-body">
                                <form asp-action="Search" method="post" id="searchForm">
                                    <div class="row g-3">
                                        <!-- Date Range -->
                                        <div class="col-md-3">
                                            <label class="form-label">Start Date</label>
                                            <input type="date" name="startDate" class="form-control"
                                                   value="@ViewBag.StartDate" />
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">End Date</label>
                                            <input type="date" name="endDate" class="form-control"
                                                   value="@ViewBag.EndDate" />
                                        </div>

                                        <!-- Branch -->
                                        <div class="col-md-3">
                                            <label class="form-label">Branch</label>
                                            <input type="text" name="branch" class="form-control"
                                                   value="@ViewBag.SelectedBranch"
                                                   placeholder="Enter Branch Name" />
                                        </div>

                                        <!-- Account Group -->
                                        <div class="col-md-3 @(ViewBag.SelectedAccGroup != null ? "selected-filter" : "")">
                                            <label class="form-label">Account Group</label>
                                            <input type="text" name="accGroup" id="accGroup" class="form-control"
                                                   placeholder="Enter Account Group"
                                                   value="@ViewBag.SelectedAccGroup"
                                                   list="accGroupOptions" />
                                            <datalist id="accGroupOptions">
                                                @if (ViewBag.UniqueAccountGroups != null)
                                                {
                                                    @foreach (var group in ViewBag.UniqueAccountGroups as List<string> ?? new List<string>())
                                                    {
                                                        <option value="@group">@group</option>
                                                    }
                                                }
                                            </datalist>
                                        </div>
                                    </div>

                                    <!-- Submit Buttons -->
                                    <div class="text-end mt-3">
                                        <button type="submit" class="btn btn-success me-2">
                                            <i class="fa fa-search"></i> Search
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary" onclick="resetForm()">
                                            <i class="fa fa-refresh"></i> Reset
                                        </button>
                                    </div>
                                </form>

                                <!-- Results Table -->
                                <div class="mt-4">
                                    @if (ViewData.ModelState.Count > 0 && !ViewData.ModelState.IsValid)
                                    {
                                        <div class="alert alert-warning">
                                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                            {
                                                <div>@error.ErrorMessage</div>
                                            }
                                        </div>
                                    }

                                    @if (Model != null && Model.Any())
                                    {
                                        <div class="table-responsive">
                                            <table class="table table-bordered table-hover">
                                                <thead class="thead-light">
                                                    <tr>
                                                        <th>Account Group</th>
                                                        <th class="text-end">Debit Amount</th>
                                                        <th class="text-end">Credit Amount</th>
                                                        <th>Balance Type</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model)
                                                    {
                                                        <tr>
                                                            <td>@(item.AccGroup ?? "N/A")</td>
                                                            <td class="text-end">
                                                                @if (item.BalanceIn?.ToUpper() == "DEBIT" || item.BalanceIn?.ToUpper() == "DR")
                                                                {
                                                                    @((item.BalanceOpening ?? 0).ToString("N2"))
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">0.00</span>
                                                                }
                                                            </td>
                                                            <td class="text-end">
                                                                @if (item.BalanceIn?.ToUpper() == "CREDIT" || item.BalanceIn?.ToUpper() == "CR")
                                                                {
                                                                    @((item.BalanceOpening ?? 0).ToString("N2"))
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">0.00</span>
                                                                }
                                                            </td>
                                                            <td>@(item.BalanceIn ?? "N/A")</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                                <tfoot class="total-row">
                                                    <tr>
                                                        <td><strong>TOTAL</strong></td>
                                                        <td class="text-end"><strong>@totalDebit.ToString("N2")</strong></td>
                                                        <td class="text-end"><strong>@totalCredit.ToString("N2")</strong></td>
                                                        <td><strong>-</strong></td>
                                                    </tr>
                                                </tfoot>
                                            </table>
                                        </div>

                                        <!-- Summary Section -->
                                        <div class="totals-section">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <div class="card border-primary">
                                                        <div class="card-body text-center">
                                                            <h6 class="card-title">Total Debit</h6>
                                                            <h4 class="text-primary">₹@totalDebit.ToString("N2")</h4>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="card border-success">
                                                        <div class="card-body text-center">
                                                            <h6 class="card-title">Total Credit</h6>
                                                            <h4 class="text-success">₹@totalCredit.ToString("N2")</h4>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="card @(netResult >= 0 ? "border-success" : "border-danger")">
                                                        <div class="card-body text-center">
                                                            <h6 class="card-title">Net Result</h6>
                                                            <h4 class="@(netResult >= 0 ? "profit" : "loss")">
                                                                ₹@Math.Abs(netResult).ToString("N2")
                                                                (@(netResult >= 0 ? "Profit" : "Loss"))
                                                            </h4>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="net-result @(netResult >= 0 ? "net-profit" : "net-loss")">
                                                <i class="fas @(netResult >= 0 ? "fa-arrow-up" : "fa-arrow-down")"></i>
                                                @if (netResult >= 0)
                                                {
                                                    <strong>NET PROFIT: ₹@netResult.ToString("N2")</strong>
                                                }
                                                else
                                                {
                                                    <strong>NET LOSS: ₹@Math.Abs(netResult).ToString("N2")</strong>
                                                }
                                            </div>
                                        </div>

                                        <div class="mt-3">
                                            <small class="text-muted">
                                                Total Records: @Model.Count |
                                                Generated on: @DateTime.Now.ToString("dd MMM yyyy HH:mm")
                                            </small>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-info no-data">
                                            <i class="fas fa-info-circle me-2"></i>
                                            No records found. Please adjust your search criteria or add new ledger entries.
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Highlight AccGroup field if it has a value
        const accGroupField = document.getElementById('accGroup');
        if (accGroupField && accGroupField.value) {
            accGroupField.parentElement.classList.add('selected-filter');
        }
    });

    function resetForm() {
        document.getElementById('searchForm').reset();
        // Remove highlighting
        document.querySelectorAll('.selected-filter').forEach(el => {
            el.classList.remove('selected-filter');
        });
        // Reload page to show all records
        window.location.href = '@Url.Action("ProfitAndLossIndex", "ProfitAndLoss")';
    }

    function exportToPdf() {
        // Get all form values
        const formData = new FormData(document.getElementById('searchForm'));
        const queryString = new URLSearchParams(formData).toString();
        window.location.href = '@Url.Action("ExportToPdf", "ProfitAndLoss")?' + queryString;
    }

    function exportToExcel() {
        // Get all form values
        const formData = new FormData(document.getElementById('searchForm'));
        const queryString = new URLSearchParams(formData).toString();
        window.location.href = '@Url.Action("ExportToExcel", "ProfitAndLoss")?' + queryString;
    }
</script>