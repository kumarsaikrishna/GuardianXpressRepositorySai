@model IEnumerable<GuardiansExpress.Models.Entity.BodyTypeEntity>@{    int rCnt = 1;    Layout = "~/Views/Shared/_Layout.cshtml";}<div class="main-panel">    <div class="content-wrapper">        <div class="row">            <div class="col-md-12 mt-3">                <div class="card">                    <div class="card-header">                        <h4 class="card-title">Body Type List</h4>                        <a href="javascript:void(0);" onclick="addBodyTypeModal();" class="btn btn-success btn-xs" style="height: 100%; display: flex; justify-content: center; align-items: center; padding: 0 10px;">                            <i class="fa fa-plus" aria-hidden="true"></i> Add Body Type                        </a>                    </div>                    <div class="box-body">                        <div class="table-responsive">                            <table id="example1" class="text-fade table table-bordered" style="width:100%">                                <thead>                                    <tr class="text-dark">                                        <th>S.No</th>                                        <th>Body Type</th>                                        <th>Action</th>                                    </tr>                                </thead>                                <tbody>                                    @foreach (var bodyType in Model)                                    {                                        <tr>                                            <td scope="row">@(rCnt++)</td>                                            <td>  <a href="#" onclick="EditBodyType(@bodyType.Id, '@bodyType.Bodytype')" title="Edit">@bodyType.Bodytype</a></td>                                            <td>                                                <a href="#" onclick="DeleteBodyType(@bodyType.Id)" title="Delete">                                                    <button type="button" class="waves-effect waves-circle btn btn-circle btn-danger btn-xs">                                                        <i class="fa fa-trash"></i>                                                    </button>                                                </a>                                            </td>                                        </tr>                                    }                                </tbody>                            </table>                        </div>                    </div>                </div>            </div>        </div>    </div></div><!-- Add Body Type Modal --><div class="modal fade" id="addBodyTypeModal" tabindex="-1" aria-labelledby="addBodyTypeModalLabel" aria-hidden="true">    <div class="modal-dialog">        <div class="modal-content">            <div class="modal-header">                <h5 class="modal-title" id="addBodyTypeModalLabel">Add Body Type</h5>                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>            </div>            <div class="modal-body">                <form id="bodyTypeForm" action="@Url.Action("BodyTypeAdd", "BodyType")" method="post" enctype="multipart/form-data">                    @Html.AntiForgeryToken()                    <div class="row">                        <div class="col-lg-12">                            <h5 class="mb-3" style="background-color: whitesmoke; color: black; padding: 10px; text-transform: uppercase;">Body Type Details</h5>                        </div>                        <div class="col-lg-12">                            <label for="BodyType">Body Type *</label>                            <input type="text" class="form-control" id="BodyType" name="BodyType" required maxlength="20">                        </div>                    </div>                    <div class="modal-footer">                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>                        <button type="submit" class="btn btn-primary">Save</button>                    </div>                </form>            </div>        </div>    </div></div><!-- Edit Body Type Modal --><div class="modal fade" id="editBodyTypeModal" tabindex="-1" aria-labelledby="editBodyTypeModalLabel" aria-hidden="true">    <div class="modal-dialog">        <div class="modal-content">            <div class="modal-header">                <h5 class="modal-title" id="editBodyTypeModalLabel">Edit Body Type</h5>                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>            </div>            <div class="modal-body">                <form id="editBodyTypeForm" action="@Url.Action("BodyTypeUpdate", "BodyType")" method="post" enctype="multipart/form-data">                    @Html.AntiForgeryToken()                    <input type="hidden" name="Id" id="editBodyTypeId" value="" />                    <div class="row">                        <div class="col-lg-12">                            <h5 class="mb-3" style="background-color: whitesmoke; color: black; padding: 10px; text-transform: uppercase;">Body Type Details</h5>                        </div>                        <div class="col-lg-12">                            <label for="editBodyType">Body Type *</label>                            <input type="text" class="form-control" id="editBodyType" name="BodyType" required maxlength="20">                        </div>                    </div>                    <div class="modal-footer">                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>                        <button type="submit" class="btn btn-primary">Update</button>                    </div>                </form>            </div>        </div>    </div></div><script>    $(document).ready(function () {        $('#bodyTypeList').DataTable();        $('#bodyTypeForm').submit(function (e) {            e.preventDefault();            var formData = new FormData(this);            $.ajax({                url: '/BodyType/BodyTypeAdd',                type: 'POST',                data: formData,                processData: false,                contentType: false,                success: function (response) {                    if (response.success) {                        Swal.fire("Success!", "Body Type added successfully.", "success")                            .then(() => {                                window.location.reload();                            });                    } else {                        Swal.fire("Error!", response.message || "There was an issue adding the Body Type.", "error");                    }                },                error: function () {                    Swal.fire("Error!", "There was an error processing your request.", "error");                }            });        });        $('#editBodyTypeForm').submit(function (e) {            e.preventDefault();            var formData = new FormData(this);            $.ajax({                url: '/BodyType/BodyTypeUpdate',                type: 'POST',                data: formData,                processData: false,                contentType: false,                success: function (response) {                    if (response.success) {                        Swal.fire("Updated!", "Body Type updated successfully.", "success").then(() => {                            $('#editBodyTypeModal').modal('hide');                            window.location.reload();                        });                    } else {                        Swal.fire("Error!", response.message || "Failed to update Body Type.", "error");                    }                },                error: function () {                    Swal.fire("Error!", "An error occurred while updating the Body Type.", "error");                }            });        });    });    function addBodyTypeModal() {        $('#addBodyTypeModal').modal('show');    }    function EditBodyType(id, bodyType) {        $("#editBodyTypeId").val(id);        $("#editBodyType").val(bodyType);        $('#editBodyTypeModal').modal('show');    }    function DeleteBodyType(id) {        Swal.fire({            title: "Are you sure?",            text: "You won't be able to revert this!",            icon: "warning",            showCancelButton: true,            confirmButtonColor: "#d33",            cancelButtonColor: "#3085d6",            confirmButtonText: "Yes, delete it!"        }).then((result) => {            if (result.isConfirmed) {                $.ajax({                    url: '/BodyType/Delete/' + id,                    type: 'POST',                    success: function (response) {                        if (response.success) {                            Swal.fire("Deleted!", "Body Type has been deleted.", "success").then(() => {                                window.location.reload();                            });                        } else {                            Swal.fire("Error!", response.message || "There was an issue deleting the Body Type.", "error");                        }                    },                    error: function () {                        Swal.fire("Error!", "There was an error processing your request.", "error");                    }                });            }        });    }    function searchTable() {        var idInput = document.getElementById("searchId").value.toLowerCase();        var bodyTypeInput = document.getElementById("searchBodyType").value.toLowerCase();        var table = document.getElementById("bodyTypeList");        var rows = table.getElementsByTagName("tr");        for (var i = 1; i < rows.length; i++) { // Skip header row            var idColumn = rows[i].getElementsByTagName("td")[1]; // ID is in the second column            var bodyTypeColumn = rows[i].getElementsByTagName("td")[2]; // Body Type is in the third column            if (idColumn && bodyTypeColumn) {                var idText = idColumn.textContent.toLowerCase();                var bodyTypeText = bodyTypeColumn.textContent.toLowerCase();                // Check if both fields match                if (idText.includes(idInput) && bodyTypeText.includes(bodyTypeInput)) {                    rows[i].style.display = "";                } else {                    rows[i].style.display = "none";                }            }        }    }</script>